<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
         http://www.springframework.org/schema/security
         http://www.springframework.org/schema/security/spring-security.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DB 연결 -->
	<!-- root-context.xml 가져오기 -->
	<import resource="/root-context.xml" />

	<!-- BCrypt 패스워드 인코더 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- login/out, 권한,토큰 설정 파트 -->
	<security:http create-session="stateless"
		entry-point-ref="authenticationEntryPoint">
		
		<!-- 권한 핸들링 -->
		<security:intercept-url pattern="/all/**"
			access="permitAll" />
		<security:intercept-url pattern="/member/**"
			access="hasRole('MEMBER')" />
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ADMIN')" />
		<!-- jwt 방식 사용으로 csrf는 off -->
		<security:csrf disabled="true" />
		<!-- 맨 처음으로 JWT 필터 등록 -->
		<security:custom-filter
			ref="jwtAuthenticationFilter" before="FIRST" />
	</security:http>
	

	<!-- 인증 실패 시 403 에러 반환 -->
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<!-- JWT 필터 빈 등록 -->
	<bean id="jwtAuthenticationFilter"
		class="com.sundostudio.security.JwtFilter" />
	<bean id="jwtTokenProvider"
		class="com.sundostudio.security.JwtTokenProvider" />
		
	<!-- 인증 매니저 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource" />
			<security:password-encoder
				ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>




</beans>